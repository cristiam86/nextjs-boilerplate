{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/cristiamdasilva/apps/research-and-development/nextjs-boilerplate/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useForm from '@bit/iamtechnologies.iamtech-js.use-form';\n\nconst Index = () => {\n  const defaultValues = {\n    name: '',\n    email: ''\n  };\n  const {\n    values,\n    useInput,\n    isValid,\n    errors,\n    showErrors\n  } = useForm(defaultValues);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"FORM VALUES: \", values);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"input\", _extends({\n    type: \"text\"\n  }, useInput('name', 'isRequired'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, showErrors.name && errors.name && errors.name.map(err => __jsx(\"div\", {\n    key: err,\n    className: \"form-errors-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ERRORS_TEXT[err])))), __jsx(\"div\", {\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"input\", _extends({\n    type: \"text\"\n  }, useInput('email', 'isEmail,isRequired'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"form-errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, showErrors.email && errors.email && errors.email.map(err => __jsx(\"div\", {\n    key: err,\n    className: \"form-errors-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, ERRORS_TEXT[err])))), isValid && __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Enviar\"))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/cristiamdasilva/apps/research-and-development/nextjs-boilerplate/pages/index.js"],"names":["React","useForm","Index","defaultValues","name","email","values","useInput","isValid","errors","showErrors","handleSubmit","event","preventDefault","console","log","map","err","ERRORS_TEXT"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0CAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,EADc;AAEpBC,IAAAA,KAAK,EAAE;AAFa,GAAtB;AAKA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,MAA7B;AAAqCC,IAAAA;AAArC,MAAoDT,OAAO,CAACE,aAAD,CAAjE;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,MAA7B;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBJ,QAAQ,CAAC,MAAD,EAAS,YAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,CAACN,IAAX,IAAmBK,MAAM,CAACL,IAA1B,IAAkCK,MAAM,CAACL,IAAP,CAAYY,GAAZ,CAAgBC,GAAG,IAAI;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CC,WAAW,CAACD,GAAD,CAAxD,CAAvB,CADrC,CAHF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBV,QAAQ,CAAC,OAAD,EAAU,oBAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,CAACL,KAAX,IAAoBI,MAAM,CAACJ,KAA3B,IAAoCI,MAAM,CAACJ,KAAP,CAAaW,GAAb,CAAiBC,GAAG,IAAI;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CC,WAAW,CAACD,GAAD,CAAxD,CAAxB,CADvC,CAHF,CARF,EAeGT,OAAO,IAAI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfd,CADF,CAFF,CADF;AAwBD,CArCD;;AAuCA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport useForm from '@bit/iamtechnologies.iamtech-js.use-form';\n\nconst Index = () => {\n  const defaultValues = {\n    name: '',\n    email: ''\n  };\n\n  const { values, useInput, isValid, errors, showErrors } = useForm(defaultValues);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"FORM VALUES: \", values);\n  };\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-field\">\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\" {...useInput('name', 'isRequired')}/>\n            <div className=\"form-errors\">\n              {showErrors.name && errors.name && errors.name.map(err => <div key={err} className=\"form-errors-item\">{ERRORS_TEXT[err]}</div>)}\n            </div>\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"text\" {...useInput('email', 'isEmail,isRequired')}/>\n            <div className=\"form-errors\">\n              {showErrors.email && errors.email && errors.email.map(err => <div key={err} className=\"form-errors-item\">{ERRORS_TEXT[err]}</div>)}\n            </div>\n          </div>\n          {isValid && <button type=\"submit\">Enviar</button>}\n        </form>\n      </div>\n    </div>\n  );\n}\n \nexport default Index;"]},"metadata":{},"sourceType":"module"}